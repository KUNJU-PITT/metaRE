% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enumerateMotifs.R
\name{enumerateDyadsWithCore}
\alias{enumerateDyadsWithCore}
\title{Enumerate Dyads With Predefined Core}
\usage{
enumerateDyadsWithCore(regulatoryRegions, k, core, minSpacer, maxSpacer,
  rc = TRUE, output = c("genes", "counts", "positions"),
  fuzzySpacer = FALSE, fuzzyOrder = FALSE, fuzzyOrientation = FALSE)
}
\arguments{
\item{regulatoryRegions}{named charachter vector of nucleotide strings}

\item{k}{size of kmers}

\item{core}{character vector of possible core motifs in a dyad}

\item{minSpacer}{minimal distance in base pairs between core and a second
motif}

\item{maxSpacer}{maximal distance in base pairs between core and a second
motif}

\item{rc}{boolean, \code{TRUE} if motifs should be considered as equal to
their reverse complements (default \code{rc=TRUE})}

\item{output}{in which format the data should be returned
(see \code{\link{enumerateMotifs}})}

\item{fuzzySpacer}{if \code{TRUE}, dyads with the same core and partner
oligomer but different spacers will be counted as the same dyad.}

\item{fuzzyOrder}{if \code{TRUE}, dyads with the same core, partner oligomer
and spacer but different order (core is left/right part of dyad) will be
counted as the same dyad.}

\item{fuzzyOrientation}{if \code{TRUE} and \code{rc=TRUE} then dyads with
partner and its reverse complement will be counted as the same dyad.}
}
\description{
Given a list of named regulatory regions, enumerate all possible
spaced dyads with a given core located within the defined spacer range
and return data on their positions in these regions.
}
\examples{
test_sequences <- c(
    gene1='ccccggggtgtcaaaccccc'
)
k <- 4
interesting_elements <- c('TGTC_4_CCCC', 'TGTC_3_CCCC', 'CCCC_4_TGTC')
result <- enumerateDyadsWithCore(test_sequences, k, 'TGTC', 0, 4,
                                       output='positions')
result[interesting_elements]
result <- enumerateDyadsWithCore(test_sequences, k, 'TGTC', 0, 4,
                                       fuzzyOrder=TRUE, output='positions')
result[interesting_elements]
interesting_elements <- c('TGTC_0..4_CCCC', 'CCCC_0..4_TGTC')
result <- enumerateDyadsWithCore(test_sequences, k, 'TGTC', 0, 4,
                                       fuzzySpacer=TRUE, output='positions')
result[interesting_elements]
result <- enumerateDyadsWithCore(test_sequences, k, 'TGTC', 0, 4,
                                       fuzzySpacer=TRUE, fuzzyOrder=TRUE,
                                       output='positions')
result[interesting_elements]
result <- enumerateDyadsWithCore(test_sequences, k, 'TGTC', 0, 4,
                                       fuzzySpacer=TRUE, fuzzyOrder=TRUE,
                                       fuzzyOrientation=TRUE,
                                       output='positions')
result['TGTC_0..4_GGGG']
}
\seealso{
\code{\link{enumerateMotifs}}, \code{\link{enumerateRepeats}}
}
